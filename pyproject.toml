[build-system]
requires = ["hatchling>=1.8.0", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "NetKet"
description="Netket : Machine Learning toolbox for many-body quantum systems."
authors=[
    {name = "Giuseppe Carleo"},
    {name = "Filippo Vicentini"},
    {name = "The NetKet authors"},
]
license = {text= "Apache 2.0"}
readme = "README.md"
keywords = ["Machine Learning",
            "Quantum",
            "Neural Networks",
            "Neural Quantum States",
            "Jax",
            "Monte Carlo"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Unix",
    "Topic :: Scientific/Engineering :: Physics",
]
dynamic = ["version"]

requires-python = ">=3.7"
dependencies = [
    "numpy~=1.20",
    "scipy>=1.5.3, <2",
    "tqdm>=4.60, <5",
    "plum-dispatch>=1.5.1, <3",
    "numba>=0.52, <0.58",
    "igraph>=0.9.8, <0.11.0",
    "jax>=0.3.16, <0.5",
    "jaxlib>=0.3.15, <0.5",
    "flax>=0.6, <0.7",
    "orjson>=3.4, <4",
    "optax>=0.1.3, <0.2",
    "numba4jax>=0.0.10, <0.1",
]

[project.optional-dependencies]
mpi = [
    "mpi4py>=3.0.1, <4", 
    "mpi4jax>=0.3.9, <0.4"
    ]
extra = [
    "tensorboardx>=2.0.0",
    "openfermion>=1.0.0",
    "h5py>=3.7.0",
    ]
dev = [
    "networkx>=2.4, <4",
    "matplotlib>=3",
    "pytest>=6",
    "pytest-xdist[psutil]>=2",
    "pytest-cov>=2.10.1",
    "pytest-json-report>=1.3",
    "coverage>=5",
    "pre-commit>=2.7",
    "black==22.10.0",
    "flake8==6.0.0; python_version >= '3.8'",
    "flake8==5.0.4; python_version < '3.8'",
    "wheel",
    "build",
]
docs = [
    "Sphinx>=5.3,<7.1",
    "sphinx-autodoc-typehints~=1.22",
    "sphinxcontrib-fulltoc~=1.2.0",
    "sphinxcontrib-jsmath~=1.0.1",
    "sphinxcontrib-napoleon==0.7",
    "myst-parser~=0.18.1",
    "nbsphinx~=0.9.1",
    "myst-nb~=0.17.1",
    "sphinx-book-theme~=1.0.1",
]

[project.urls]
 homepage = "https://www.netket.org"
 documentation = "https://netket.readthedocs.io/en/latest/#"
 repository = "https://github.com/netket/netket"
 changelog = "https://netket.readthedocs.io/en/latest/docs/changelog.html"

[tool.hatch.build]
include = ["netket*"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "netket/_version.py"


# Development tools

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.coverage.run]
branch = true
parallel = true
concurrency = ["multiprocessing"]
command_line = "-m pytest --verbose test"
source = ["netket"]

[tool.pytest.ini_options]
addopts = "--color=yes --verbose --durations=100 -n auto --tb=short"
doctest_optionflags = "NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL NUMBER"
filterwarnings = [
    "ignore::UserWarning",
    "ignore:No GPU/TPU found, falling back to CPU.:UserWarning",
    "ignore:the imp module is deprecated in favour of importlib.*:DeprecationWarning",
    "ignore:`np.long`",
    "ignore:`np.int` is a deprecated alias for the builtin `int`",
    "ignore::DeprecationWarning:tensorboardX",
]
testpaths = [
    "test",
]
